{"version":3,"file":null,"sources":["../lib/utils.js","../lib/core.js","../lib/index.js"],"sourcesContent":["export function msEventType(type) {\n    let lo = type.toLowerCase();\n    let ms = 'MS' + type;\n    return window.navigator.msPointerEnabled ? ms : lo;\n}\nexport function getPointerEvent(event) {\n    return event.targetTouches ? event.targetTouches[0] : event;\n}\n","import { msEventType, getPointerEvent } from \"./utils\";\nexport var CustomSwipe;\n(function (CustomSwipe) {\n    let TARGET = null;\n    const touchEvents = {\n        touchstart: msEventType('PointerDown') + ' touchstart',\n        touchend: msEventType('PointerUp') + ' touchend',\n        touchmove: msEventType('PointerMove') + ' touchmove'\n    };\n    let isTouchEvent = false;\n    let currX;\n    let currY;\n    let cachedX;\n    let cachedY;\n    // We need these variables to get the final distance\n    let deltaX;\n    let deltaY;\n    function init(doc) {\n        let html = doc.documentElement;\n        // Return false in case there is no html element for some reason\n        if (html == null)\n            return false;\n        // In case some other framework has already instantiated custom-swipe-event\n        if (html.classList.contains('custom-swipe-event-enabled'))\n            return true;\n        //setting the events listeners\n        // we need to debounce the callbacks because some devices multiple events are triggered at same time\n        setListener(doc, touchEvents.touchstart + ' mousedown', onTouchStart);\n        setListener(doc, touchEvents.touchend + ' mouseup', onTouchEnd);\n        setListener(doc, touchEvents.touchmove + ' mousemove', onTouchMove);\n        html.classList.add('custom-swipe-event-enabled');\n        return true;\n    }\n    CustomSwipe.init = init;\n    function setListener(elm, events, callback) {\n        let eventsArray = events.split(' ');\n        let i = eventsArray.length;\n        while (i--) {\n            elm.addEventListener(eventsArray[i], callback, false);\n        }\n    }\n    function onTouchStart(e) {\n        if (e.type !== 'mousedown')\n            isTouchEvent = true;\n        // skip this event we don't need to track it now\n        if (e.type === 'mousedown' && isTouchEvent) {\n            TARGET = null;\n            return;\n        }\n        let pointer = getPointerEvent(e);\n        // caching the current x\n        cachedX = currX = pointer.pageX;\n        // caching the current y\n        cachedY = currY = pointer.pageY;\n        TARGET = e.target;\n        sendEvent(TARGET, 'swipestart', { x: 0, y: 0 });\n    }\n    function onTouchEnd(e) {\n        let eventName = null;\n        // skip the mouse events if previously a touch event was dispatched\n        // and reset the touch flag\n        if (e.type === 'mouseup' && isTouchEvent) {\n            isTouchEvent = false;\n            TARGET = null;\n            return;\n        }\n        deltaY = cachedY - currY;\n        deltaX = cachedX - currX;\n        sendEvent(TARGET, 'swipeend', { x: Math.abs(deltaX), y: Math.abs(deltaY) });\n        TARGET = null;\n    }\n    function onTouchMove(e) {\n        // skip the mouse move events if the touch events were previously detected\n        if (e.type === 'mousemove' && isTouchEvent)\n            return;\n        let pointer = getPointerEvent(e);\n        currX = pointer.pageX;\n        currY = pointer.pageY;\n        deltaY = cachedY - currY;\n        deltaX = cachedX - currX;\n        if (TARGET) {\n            sendEvent(TARGET, 'swipemove', { x: Math.abs(deltaX), y: Math.abs(deltaY) });\n        }\n    }\n    function sendEvent(elm, type, distance) {\n        let data = {\n            x: currX,\n            y: currY,\n            distance: distance,\n            swipeEventSubType: type\n        };\n        let customEvent = window.document.createEvent('Event');\n        // addEventListener\n        if (customEvent.initEvent) {\n            for (let key in data) {\n                customEvent[key] = data[key];\n            }\n            customEvent.initEvent('swipe', true, true);\n            elm.dispatchEvent(customEvent);\n        }\n        // detect all the inline events\n        // also on the parent nodes\n        /*while (elm) {\n          // inline\n          if (elm['on' + eventName]) elm['on' + eventName](customEvent);\n          elm = elm.parentNode\n        }*/\n    }\n})(CustomSwipe || (CustomSwipe = {}));\n","import { CustomSwipe } from \"./core\";\nconst CustomSwipeEvent = (function (doc) {\n    return CustomSwipe.init(doc);\n}(window.document));\nexport default CustomSwipeEvent;\n"],"names":["msEventType","type","lo","toLowerCase","ms","window","navigator","msPointerEnabled","getPointerEvent","event","targetTouches","CustomSwipe","TARGET","touchEvents","isTouchEvent","currX","currY","cachedX","cachedY","deltaX","deltaY","init","doc","html","documentElement","classList","contains","touchstart","onTouchStart","touchend","onTouchEnd","touchmove","onTouchMove","add","setListener","elm","events","callback","eventsArray","split","i","length","addEventListener","e","pointer","pageX","pageY","target","x","y","eventName","Math","abs","sendEvent","distance","data","customEvent","document","createEvent","initEvent","key","dispatchEvent","CustomSwipeEvent"],"mappings":"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"}